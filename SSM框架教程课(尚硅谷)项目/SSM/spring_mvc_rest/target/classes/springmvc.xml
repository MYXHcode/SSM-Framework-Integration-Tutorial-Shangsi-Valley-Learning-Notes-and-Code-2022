<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 扫描组件 -->
    <context:component-scan base-package="com.myxh.springmvc"/>

    <!-- 配置 Thymeleaf 视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring6.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring6.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>

                        <property name="templateMode" value="HTML"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
        配置默认的 servlet 处理静态资源

        当前工程的 web.xml 配置的前端控制器 DispatcherServlet 的 url-pattern 是 /
        tomcat 的 web.xml 配置的 DefaultServlet 的 url-pattern 也是 /
        此时，浏览器发送的请求会优先被 DispatcherServlet 进行处理，但是 DispatcherServlet 无法处理静态资源
        若配置了 <mvc:default-servlet-handler/>，此时浏览器发送的所有请求都会被 DefaultServlet 处理
        若配置了 <mvc:default-servlet-handler/> 和 <mvc:annotation-driven/>
        浏览器发送的请求会先被 DispatcherServlet 处理，无法处理在交给 DefaultServlet 处理
      -->
    <mvc:default-servlet-handler/>

    <!-- 开启 mvc 的注解驱动 -->
    <mvc:annotation-driven/>

    <!-- 配置视图控制器 -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/to/add" view-name="employee_add"/>
</beans>